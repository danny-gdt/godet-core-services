services:
  # --- Votre Service Applicatif ---
  auth-service:
    container_name: auth-service
    build:
      context: . # Le contexte est à la racine du monorepo
      dockerfile: auth-service/Dockerfile # On spécifie le chemin vers le Dockerfile
    ports:
      - "3000:3000"
    environment:
      # L'URL de connexion pointe vers le service postgres-db
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-db:5432/${POSTGRES_DB_AUTH}?schema=public"
    depends_on:
      - postgres-db
    networks:
      - godet-net

  # --- Base de Données ---
  postgres-db:
    image: postgres:15-alpine
    container_name: postgres-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB_AUTH}
    ports:
      - "5433:5432" # Permet de se connecter à la BDD depuis votre machine locale si besoin
    volumes:
      - postgres-data:/var/lib/postgresql/data # Persistance des données de la BDD
    networks:
      - godet-net

  # --- Stack de Monitoring ELK ---
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false # Simplicité pour le développement local
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # Limite la mémoire utilisée par Elasticsearch
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data # Persistance des données d'Elasticsearch
    networks:
      - godet-net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.0
    container_name: kibana
    ports:
      - "5601:5601" # Port de l'interface web de Kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200 # Dit à Kibana où trouver Elasticsearch
    networks:
      - godet-net

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.14.0
    container_name: filebeat
    user: root # Nécessaire pour accéder aux logs Docker sur la machine hôte
    command: filebeat -e -strict.perms=false
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro # Monte votre configuration
      - /var/run/docker.sock:/var/run/docker.sock:ro # Permet de découvrir les conteneurs
      - /var/lib/docker/containers:/var/lib/docker/containers:ro # Accède aux fichiers de logs des conteneurs
    depends_on:
      - elasticsearch
      - kibana
    networks:
      - godet-net

# --- Volumes Nommés (pour la persistance des données) ---
volumes:
  postgres-data:
  elasticsearch-data:

# --- Réseau Personnalisé (pour que les services se trouvent par leur nom) ---
networks:
  godet-net:
    driver: bridge